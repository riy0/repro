daemon off;
user root;
error_log /dev/stdout info;

events {
    worker_connections  1024;
}

http {
    access_log /dev/stdout;

    server {
        server_name localhost;

        mruby_server_context_handler_code '
            s = Nginx::Server.new
            Docker::Container.me.exposed_ports.map(&:last).each do |port|
                s.add_listener({address: port})
            end
        ';


        location / {
            mruby_content_handler /usr/local/nginx/hook/index.rb;
        }
    }

     server {
        server_name *.localhost;

        mruby_server_context_handler_code '
            s = Nginx::Server.new
            Docker::Container.me.exposed_ports.map(&:last).each do |port|
                s.add_listener({address: port})
            end
        ';

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            mruby_set $backend /usr/local/nginx/hook/proxy.rb;
            proxy_pass   http://$backend;
        }
    }
}
